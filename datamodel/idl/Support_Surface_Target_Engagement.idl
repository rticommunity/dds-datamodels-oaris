#ifndef SUPPORT_SURFACE_TARGET_ENGAGEMENTDEFVAR
#define SUPPORT_SURFACE_TARGET_ENGAGEMENTDEFVAR
#include "Common_Types.idl"
#include "Requests.idl"
#include "Engagement_Support.idl"
#include "Track_Reporting.idl"


// Version 1.1
module org {


  module omg {


    module c4i {


      module Service_Interfaces {


        module Radar_Services {


          module Engagement_Support {


            module Support_Surface_Target_Engagement {



              // Topic type for operation dedesignate_fire_control_channel. . Request to the
              // subsystem to de-designate a fire control channel.
              struct dedesignate_fire_control_channel_type
              {
              	// Field for interface operation parameter RequestID. 
              	org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type RequestID;
              	// Field for interface operation parameter FireControlChannelID. 
              	org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::fire_control_channel_id_type FireControlChannelID;
              // Indicates which subsystem published the data or is intended to read it as a subscriber
#ifdef DDS_XTYPES
              @Key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#else
              org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#endif
              };
#pragma keylist dedesignate_fire_control_channel_type  subsystem_id
  




              // Topic type for operation designate_fire_control_channel. . Request to the
              // subsystem to designate a fire control channel.
              struct designate_fire_control_channel_type
              {
              	// Field for interface operation parameter request_id. 
              	org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
              	// Field for interface operation parameter track_id. 
              	org::omg::c4i::Domain_Model::Sensor_Domain::Track_Reporting::sensor_track_id_type track_id;
              // Indicates which subsystem published the data or is intended to read it as a subscriber
#ifdef DDS_XTYPES
              @Key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#else
              org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#endif
              };
#pragma keylist designate_fire_control_channel_type  subsystem_id
  




              // Topic type for operation report_availability_state_of_fire_control_channels.
              // This service is intended for fire control radars, as well as surveillance radar
              // systems that have facilities to perform surface target engagements by means of
              // dedicated fire control channels. These fire control channels may need a
              // differently parameterized or more elaborate track algorithm, and they may be
              // combined with related splash spotting video.
              // 
              //      The CMS requests the surface track to be engaged. The maximum number of
              // tracks that may be engaged simultaneously is determined by the radar.
              //      The functionality may also be available for land targets, provided they
              // may be tracked by the radar.
              // 
              //      In the case where the CMS looses or releases mastership of the subsystem,
              // a change of the availability of fire control channels shall be indicated to the
              // CMS. Fire control radars shall cease all fire control activities.
              // 
              //      The set of operational modes that make fire control channels available, as
              // well as the number of available channels shall be provided by means of service
              // "Manage Subsystem Parameters". . Via this interface method, the number of
              // available fire control channels are returned from the subsystem to the CMS. If
              // no channel is available, the value '0' is returned.
              struct report_availability_state_of_fire_control_channels_type
              {
              	// Field for interface operation parameter RequestID. 
              	org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type RequestID;
              	// Field for interface operation parameter AvailableFireControlChannels. 
              	org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::available_fire_control_channels_type AvailableFireControlChannels;
              // Indicates which subsystem published the data or is intended to read it as a subscriber
#ifdef DDS_XTYPES
              @Key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#else
              org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#endif
              };
#pragma keylist report_availability_state_of_fire_control_channels_type  subsystem_id
  




              // Topic type for operation report_available_fire_control_channel. This service is
              // intended for fire control radars, as well as surveillance radar systems that
              // have facilities to perform surface target engagements by means of dedicated
              // fire control channels. These fire control channels may need a differently
              // parameterized or more elaborate track algorithm, and they may be combined with
              // related splash spotting video.
              // 
              //      The CMS requests the surface track to be engaged. The maximum number of
              // tracks that may be engaged simultaneously is determined by the radar.
              //      The functionality may also be available for land targets, provided they
              // may be tracked by the radar.
              // 
              //      In the case where the CMS looses or releases mastership of the subsystem,
              // a change of the availability of fire control channels shall be indicated to the
              // CMS. Fire control radars shall cease all fire control activities.
              // 
              //      The set of operational modes that make fire control channels available, as
              // well as the number of available channels shall be provided by means of service
              // "Manage Subsystem Parameters". . Via this interface method, the number of
              // available fire control channels are returned from the subsystem to the CMS.
              struct report_available_fire_control_channel_type
              {
              	// Field for interface operation parameter RequestID. 
              	org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type RequestID;
              	// Field for interface operation parameter FireControlChannelID. 
              	org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::fire_control_channel_id_type FireControlChannelID;
              // Indicates which subsystem published the data or is intended to read it as a subscriber
#ifdef DDS_XTYPES
              @Key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#else
              org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#endif
              };
#pragma keylist report_available_fire_control_channel_type  subsystem_id
  




              // Topic type for operation report_selected_fire_control_channel. This service is
              // intended for fire control radars, as well as surveillance radar systems that
              // have facilities to perform surface target engagements by means of dedicated
              // fire control channels. These fire control channels may need a differently
              // parameterized or more elaborate track algorithm, and they may be combined with
              // related splash spotting video.
              // 
              //      The CMS requests the surface track to be engaged. The maximum number of
              // tracks that may be engaged simultaneously is determined by the radar.
              //      The functionality may also be available for land targets, provided they
              // may be tracked by the radar.
              // 
              //      In the case where the CMS looses or releases mastership of the subsystem,
              // a change of the availability of fire control channels shall be indicated to the
              // CMS. Fire control radars shall cease all fire control activities.
              // 
              //      The set of operational modes that make fire control channels available, as
              // well as the number of available channels shall be provided by means of service
              // "Manage Subsystem Parameters". . Via this interface method, the selected fire
              // control channel is returned from the subsystem to the CMS.
              struct report_selected_fire_control_channel_type
              {
              	// Field for interface operation parameter RequestID. 
              	org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type RequestID;
              	// Field for interface operation parameter FireControlChannelID. 
              	org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::fire_control_channel_id_type FireControlChannelID;
              	// Field for interface operation parameter SensorTrackId. 
              	org::omg::c4i::Domain_Model::Sensor_Domain::Track_Reporting::sensor_track_id_type SensorTrackId;
              // Indicates which subsystem published the data or is intended to read it as a subscriber
#ifdef DDS_XTYPES
              @Key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#else
              org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#endif
              };
#pragma keylist report_selected_fire_control_channel_type  subsystem_id
  




              // Topic type for operation request_availability_of_fire_control_channels. .
              // Request to the subsystem to report the available fire control channels.
              struct request_availability_of_fire_control_channels_type
              {
              	// Field for interface operation parameter RequestID. 
              	org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type RequestID;
              // Indicates which subsystem published the data or is intended to read it as a subscriber
#ifdef DDS_XTYPES
              @Key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#else
              org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
#endif
              };
#pragma keylist request_availability_of_fire_control_channels_type  subsystem_id
  



            };
          };
        };
      };
    };
  };
};
#endif