// copyright 2013-2020 BAE Systems, Thales Group, Object Management Group Inc; 2013 Selex ES, DSTO, Atlas Elektronik, EADS Deutschland GmbH

#ifndef ORGOMGC4ISERVICE_INTERFACESRADAR_SERVICESENGAGEMENT_SUPPORTSUPPORT_SURFACE_TARGET_ENGAGEMENTDEFVAR
#define ORGOMGC4ISERVICE_INTERFACESRADAR_SERVICESENGAGEMENT_SUPPORTSUPPORT_SURFACE_TARGET_ENGAGEMENTDEFVAR
#include "Common_Types.idl"
#include "Requests.idl"
#include "Engagement_Support.idl"
#include "Track_Reporting.idl"

module org
{

  module omg
  {

    module c4i
    {

      module Service_Interfaces
      {

        module Radar_Services
        {

          module Engagement_Support
          {

            module Support_Surface_Target_Engagement
            {

              @doc("struct holding keys for class report_availability_state_of_fire_control_channels_type.")
              struct report_availability_state_of_fire_control_channels_key_type
              {
                org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };

              @doc("Via this interface method, the number of available fire control channels are
                returned from the subsystem to the CMS. If no channel is available, the value '0'
                is returned.
                This service is intended for fire control radars, as well as surveillance radar
                systems that have facilities to perform surface target engagements by means of
                dedicated fire control channels. These fire control channels may need a
                differently parameterized or more elaborate track algorithm, and they may be
                combined with related splash spotting video.
                The CMS requests the surface track to be engaged. The maximum number of tracks
                that may be engaged simultaneously is determined by the radar.
                The functionality may also be available for land targets, provided they may be
                tracked by the radar.
                In the case where the CMS looses or releases mastership of the subsystem, a
                change of the availability of fire control channels shall be indicated to the
                CMS. Fire control radars shall cease all fire control activities.
                The set of operational modes that make fire control channels available, as well
                as the number of available channels shall be provided by means of service \"Manage
                Subsystem Parameters\".")
              struct report_availability_state_of_fire_control_channels_type
              {
                @key org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                @key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
                org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::available_fire_control_channels_type AvailableFireControlChannels;
              };

              @doc("struct holding keys for class report_available_fire_control_channel_type.")
              struct report_available_fire_control_channel_key_type
              {
                org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };

              @doc("Via this interface method, the number of available fire control channels are
                returned from the subsystem to the CMS.
                This service is intended for fire control radars, as well as surveillance radar
                systems that have facilities to perform surface target engagements by means of
                dedicated fire control channels. These fire control channels may need a
                differently parameterized or more elaborate track algorithm, and they may be
                combined with related splash spotting video.
                The CMS requests the surface track to be engaged. The maximum number of tracks
                that may be engaged simultaneously is determined by the radar.
                The functionality may also be available for land targets, provided they may be
                tracked by the radar.
                In the case where the CMS looses or releases mastership of the subsystem, a
                change of the availability of fire control channels shall be indicated to the
                CMS. Fire control radars shall cease all fire control activities.
                The set of operational modes that make fire control channels available, as well
                as the number of available channels shall be provided by means of service \"Manage
                Subsystem Parameters\".")
              struct report_available_fire_control_channel_type
              {
                @key org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                @key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
                org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::fire_control_channel_id_type FireControlChannelID;
              };

              @doc("struct holding keys for class report_selected_fire_control_channel_type.")
              struct report_selected_fire_control_channel_key_type
              {
                org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };

              @doc("Via this interface method, the selected fire control channel is returned from the
                subsystem to the CMS.
                This service is intended for fire control radars, as well as surveillance radar
                systems that have facilities to perform surface target engagements by means of
                dedicated fire control channels. These fire control channels may need a
                differently parameterized or more elaborate track algorithm, and they may be
                combined with related splash spotting video.
                The CMS requests the surface track to be engaged. The maximum number of tracks
                that may be engaged simultaneously is determined by the radar.
                The functionality may also be available for land targets, provided they may be
                tracked by the radar.
                In the case where the CMS looses or releases mastership of the subsystem, a
                change of the availability of fire control channels shall be indicated to the
                CMS. Fire control radars shall cease all fire control activities.
                The set of operational modes that make fire control channels available, as well
                as the number of available channels shall be provided by means of service \"Manage
                Subsystem Parameters\".")
              struct report_selected_fire_control_channel_type
              {
                @key org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                @key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
                org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::fire_control_channel_id_type FireControlChannelID;
                org::omg::c4i::Domain_Model::Sensor_Domain::Track_Reporting::sensor_track_id_type SensorTrackId;
              };

              @doc("struct holding keys for class dedesignate_fire_control_channel_type.")
              struct dedesignate_fire_control_channel_key_type
              {
                org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };

              @doc("Request to the subsystem to de-designate a fire control channel.")
              struct dedesignate_fire_control_channel_type
              {
                @key org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                @key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
                org::omg::c4i::Domain_Model::Radar_Domain::Engagement_Support::fire_control_channel_id_type FireControlChannelID;
              };

              @doc("struct holding keys for class designate_fire_control_channel_type.")
              struct designate_fire_control_channel_key_type
              {
                org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };

              @doc("Request to the subsystem to designate a fire control channel.")
              struct designate_fire_control_channel_type
              {
                @key org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                @key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
                org::omg::c4i::Domain_Model::Sensor_Domain::Track_Reporting::sensor_track_id_type track_id;
              };

              @doc("struct holding keys for class request_availability_of_fire_control_channels_type.")
              struct request_availability_of_fire_control_channels_key_type
              {
                org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };

              @doc("Request to the subsystem to report the available fire control channels.")
              struct request_availability_of_fire_control_channels_type
              {
                @key org::omg::c4i::Domain_Model::Common_Types::Requests::request_id_type request_id;
                @doc("Indicates which subsystem published the data or is intended to read it as a
                  subscriber")
                @key org::omg::c4i::Domain_Model::Common_Types::subsystem_id_type subsystem_id;
              };
            };
          };
        };
      };
    };
  };
};
#endif
