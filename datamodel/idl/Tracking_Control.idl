#ifndef TRACKING_CONTROLDEFVAR
#define TRACKING_CONTROLDEFVAR
#include "Common_Types.idl"
#include "Shape_Model.idl"


// Version 1.1
module org {


  module omg {


    module c4i {


      module Domain_Model {


        module Sensor_Domain {


          module Tracking_Control {



            // The meaning of track_priority_type is to assign a priority among a set of
            // tracks based on some criteria (i.e. subsystem's time dedicated to a track
            // analysis).
            // 
            //    Example of values:
            //    1 Track While Scan (TWS)
            //    2 Low Priority Target (LPT)
            //    3 High Priority Target (HPT)
            typedef short track_priority_type;
  




            // This struct identifies track information.
            struct track_info
            {
            	// This is additional information that is not specified as part of the interface.
            	// Candidate information includes:
            	//      - Track type,
            	//      - Track priority,
            	//      - Track Identification Category Assigned (Pending, Friend, Assumed Friend,
            	// Neutral, Unknown, Suspect, Hostile).
            	org::omg::c4i::Domain_Model::Common_Types::anonymous_blob_type additional_information;
            	org::omg::c4i::Domain_Model::Common_Types::system_track_id_type system_track_id;
            	track_priority_type track_priority;
            	org::omg::c4i::Domain_Model::Common_Types::identity_type identification_assigned_type;
            };
  




            // Identifies the type of a tracking zone.
            enum tracking_zone_type
            {
            	// AUTOMATIC_TRACK_INITIATION
            	AUTOMATIC_TRACK_INITIATION,
            	// MULTIPATH_DEVOTED_TRACKING
            	MULTIPATH_DEVOTED_TRACKING,
            	// TRACK_ON_JAMMER
            	TRACK_ON_JAMMER
            };
  




            // This typedef is used to identify a specific tracking zone.
            typedef short tracking_zone_id_type;
  




            // This struct identifies a tracking zone.
            struct tracking_zone
            {
            	// Indicates whether the CMS is enabling or disabling a tracking zone.
            	boolean enable;
            	// This is the polar volume of the zone.
            	org::omg::c4i::Domain_Model::Common_Types::Shape_Model::general_polar_volume_type shape;
            	// This indicates the tracking zone type.
            	tracking_zone_type tracking_type;
            	// A unique identifier for the tracking zone.
            	tracking_zone_id_type tracking_zone_id;
            };
  




            // A sequence type, to represent multiple values. Note: variable length sequence.
            typedef sequence<tracking_zone> tracking_zone_set_zone_type;
  




            // This struct contains zero  to many tracking zones which must be set/reset by
            // the CMS.
            struct tracking_zone_set
            {
            	tracking_zone_set_zone_type zone;
            };
  



          };
        };
      };
    };
  };
};
#endif